{"ast":null,"code":"import { makeAutoObservable, reaction, autorun } from \"mobx\";\nimport api from \"../services/API\";\nexport class Store {\n  constructor() {\n    this.searchDisposer = void 0;\n    this.movies = [];\n    this.loading = false;\n    this.search = '';\n\n    this.fetchMovies = async () => {\n      if (this.loading) {\n        return;\n      }\n\n      ;\n      this.setLoading(true);\n\n      try {\n        const movies = await api.getMovies(this.search);\n        this.setMovies(movies);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.setLoading(false);\n      }\n\n      ;\n    };\n\n    this.chooseF = 0;\n    this.chooseA = 0;\n    this.chooseD = 0;\n    makeAutoObservable(this);\n    this.searchDisposer = reaction(() => this.search, () => this.fetchMovies());\n    autorun(() => {\n      if (this.search.includes(\"A\")) {\n        for (let i = 0; i < 1;) {\n          this.incrementChooseA();\n        }\n      }\n      /* if (this.search.includes(\"A\")) {\n           console.log(\"Escolheu a letra A\");\n           this.chooseA = this.chooseA + 1;\n       } else if(this.search.includes(\"D\")){ \n           console.log(\"Escolheu a letra D\")\n           this.chooseD = this.chooseD + 1;\n       } else if (this.search.includes(\"F\")) {  \n           console.log(\"Escolheu a letra F\")\n           this.chooseF = this.chooseF + 1;\n       } */\n\n    });\n  }\n\n  setSearch(search) {\n    this.search = search;\n  }\n\n  setMovies(movies) {\n    this.movies = movies;\n  }\n\n  setLoading(loading) {\n    this.loading = loading;\n  }\n\n  dispose() {\n    var _this$searchDisposer;\n\n    (_this$searchDisposer = this.searchDisposer) === null || _this$searchDisposer === void 0 ? void 0 : _this$searchDisposer.call(this);\n  }\n\n  incrementChooseA() {\n    this.chooseA += 1;\n  }\n\n}\n;","map":{"version":3,"sources":["/home/manoel/Codigos/treinamento/aulas/05/reactmovies/src/Home/store.ts"],"names":["makeAutoObservable","reaction","autorun","api","Store","constructor","searchDisposer","movies","loading","search","fetchMovies","setLoading","getMovies","setMovies","e","console","error","chooseF","chooseA","chooseD","includes","i","incrementChooseA","setSearch","dispose"],"mappings":"AAAA,SAASA,kBAAT,EAAgDC,QAAhD,EAA0DC,OAA1D,QAAyE,MAAzE;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,MAAMC,KAAN,CAAY;AAEfC,EAAAA,WAAW,GAAG;AAAA,SADPC,cACO;AAAA,SAyBPC,MAzBO,GAyBiB,EAzBjB;AAAA,SA0BPC,OA1BO,GA0BY,KA1BZ;AAAA,SA2BPC,MA3BO,GA2BU,EA3BV;;AAAA,SAwCPC,WAxCO,GAwCO,YAAY;AAC7B,UAAI,KAAKF,OAAT,EAAkB;AACd;AACH;;AAAA;AACD,WAAKG,UAAL,CAAgB,IAAhB;;AAEA,UAAI;AACA,cAAMJ,MAAM,GAAG,MAAMJ,GAAG,CAACS,SAAJ,CAAc,KAAKH,MAAnB,CAArB;AACA,aAAKI,SAAL,CAAeN,MAAf;AACH,OAHD,CAGE,OAAOO,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,OALD,SAKU;AACN,aAAKH,UAAL,CAAgB,KAAhB;AACH;;AAAA;AACJ,KAtDa;;AAAA,SA0DPM,OA1DO,GA0DG,CA1DH;AAAA,SA2DPC,OA3DO,GA2DG,CA3DH;AAAA,SA4DPC,OA5DO,GA4DG,CA5DH;AACVnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,SAAKM,cAAL,GAAsBL,QAAQ,CAC1B,MAAM,KAAKQ,MADe,EAE1B,MAAM,KAAKC,WAAL,EAFoB,CAA9B;AAIAR,IAAAA,OAAO,CAAC,MAAM;AACV,UAAG,KAAKO,MAAL,CAAYW,QAAZ,CAAqB,GAArB,CAAH,EAA6B;AACzB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,GAAwB;AACpB,eAAKC,gBAAL;AACH;AACJ;AAEF;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACS,KAjBM,CAAP;AAkBH;;AAKMC,EAAAA,SAAS,CAACd,MAAD,EAAiB;AAC7B,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACMI,EAAAA,SAAS,CAACN,MAAD,EAAwB;AACpC,SAAKA,MAAL,GAAcA,MAAd;AACH;;AAEMI,EAAAA,UAAU,CAACH,OAAD,EAAmB;AAChC,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAiBMgB,EAAAA,OAAO,GAAG;AAAA;;AACb,iCAAKlB,cAAL;AACH;;AAIMgB,EAAAA,gBAAgB,GAAG;AACtB,SAAKJ,OAAL,IAAgB,CAAhB;AACH;;AAjEc;AAkElB","sourcesContent":["import { makeAutoObservable, IReactionDisposer, reaction, autorun } from \"mobx\";\nimport * as types from '../declarations/types';\nimport api from \"../services/API\";\n\nexport class Store {\n    public searchDisposer: IReactionDisposer;\n    constructor() {\n        makeAutoObservable(this);\n        this.searchDisposer = reaction(\n            () => this.search,\n            () => this.fetchMovies(),\n        );\n        autorun(() => {\n            if(this.search.includes(\"A\")){\n                for (let i = 0; i < 1;) {\n                    this.incrementChooseA()\n                }\n            }\n           \n           /* if (this.search.includes(\"A\")) {\n                console.log(\"Escolheu a letra A\");\n                this.chooseA = this.chooseA + 1;\n            } else if(this.search.includes(\"D\")){ \n                console.log(\"Escolheu a letra D\")\n                this.chooseD = this.chooseD + 1;\n            } else if (this.search.includes(\"F\")) {  \n                console.log(\"Escolheu a letra F\")\n                this.chooseF = this.chooseF + 1;\n            } */    \n        })\n    };\n    public movies: types.Movie[] = [];\n    public loading: boolean = false;\n    public search: string = '';\n\n    public setSearch(search: string) {\n        this.search = search;\n    };\n    public setMovies(movies: types.Movie[]) {\n        this.movies = movies;\n    };\n\n    public setLoading(loading: boolean) {\n        this.loading = loading;\n    };\n\n    public fetchMovies = async () => {\n        if (this.loading) {\n            return;\n        };\n        this.setLoading(true);\n\n        try {\n            const movies = await api.getMovies(this.search);\n            this.setMovies(movies);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            this.setLoading(false);\n        };\n    };\n    public dispose() {\n        this.searchDisposer?.();\n    }\n    public chooseF = 0;\n    public chooseA = 0;\n    public chooseD = 0;\n    public incrementChooseA() {\n        this.chooseA += 1\n    }\n};"]},"metadata":{},"sourceType":"module"}